import streamlit as st
import yfinance as yf
import plotly.graph_objects as go
from datetime import date

st.set_page_config(page_title="Painel BTC", layout="wide")
st.title("üìä Painel de An√°lise do Ciclo do Bitcoin")

# Sele√ß√£o de datas
start = st.date_input("Data inicial", value=date(2021,1,1))
end = st.date_input("Data final", value=date.today())

# Download do pre√ßo
btc = yf.download("BTC-USD", start=start, end=end)

# Seletor de an√°lise
analise = st.selectbox("Selecione o tipo de an√°lise:", [
    "RSI Di√°rio",
    "RSI Estoc√°stico",
    "Fibonacci",
    "M√©dia M√≥vel 200",
    "Comparar Ciclos"
])

# Gr√°fico b√°sico
fig = go.Figure()
fig.add_trace(go.Scatter(x=btc.index, y=btc['Close'], name="BTC/USD"))

# Aplica√ß√£o de an√°lises b√°sicas
if analise == "M√©dia M√≥vel 200":
    btc['MM200'] = btc['Close'].rolling(window=200).mean()
    fig.add_trace(go.Scatter(x=btc.index, y=btc['MM200'], name="M√©dia M√≥vel 200", line=dict(color="orange")))

# Exibe gr√°fico
st.plotly_chart(fig, use_container_width=True)

# Entrada de link externo
link = st.text_input("Cole aqui o link do gr√°fico externo (LookIntoBitcoin, Glassnode etc.)")

if st.button("Gerar An√°lise Simples"):
    st.success("üìù An√°lise baseada nos dados selecionados:")
    st.markdown(f"""
    - **Per√≠odo:** {start} at√© {end}  
    - **Tipo de an√°lise:** {analise}  
    - **Fonte externa:** {link if link else "N√£o informado"}  
    - **Resumo t√©cnico (simulado):**  
        - Pre√ßo atual comparado √† MM200 pode indicar fase de acumula√ß√£o.
    """)
